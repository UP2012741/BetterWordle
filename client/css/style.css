*,
*::after,
*::before {
    box-sizing: border-box;
    margin: 0;
    padding: 0;
    font-family: Arial, Helvetica, sans-serif;
}

html,
body {
    height: 100%;
    font-family: Arial, Helvetica, sans-serif;

}


#container {
    display: flex;
    background-color: hsl(240, 3%, 7%);
    height: 100%;
    align-items: center;
    flex-direction: column;
}



.title {
    color: white;
    font-size: 3em;
    font-weight: bold;
    margin: 1rem;
    justify-content: center;
    align-items: center;
}


.table {
    display: grid;
    align-items: center;
    align-content: center;
    flex-direction: column;
    flex-grow: 1;
    gap: 0.05em;
    margin-bottom: 1em;
}

.square {
    display: flex;
    justify-content: center;
    align-items: center;
    text-transform: uppercase;
    color: white;
    border: 0.075em solid hsl(240, 2%, 23%);
    display: flex;
    font-size: 2em;
    font-weight: bold;
    height: 2em;
    width: 2em;
    user-select: none;
    transition: transform 250ms linear;
    margin: 0.05em;

}

.filled-box {
    border: 0.05em solid black;
}

.table-row {
    display: flex;
}

.keyboard-overlay {
    display: grid;
    grid-template-columns: repeat(20, minmax(auto, 1.5em));
    grid-auto-rows: 3em;
    gap: .25em;
    justify-content: center;
}

.key {
    font-size: 1em;
    grid-column: span 2;
    border: none;
    padding: 0;
    display: flex;
    justify-content: center;
    align-items: center;
    background-color: hsl(var(--hue, 200),
            var(--saturation, 1%),
            calc(var(--lightness-offset, 0%) + var(--lightness, 51%)));
    color: white;
    fill: white;
    text-transform: uppercase;
    border-radius: .5em;
    cursor: pointer;
    user-select: none;
}

.key.larger {
    grid-column: span 3;
}

.key>svg {
    width: 1.75em;
    height: 1.75em;
}

.key:hover,
.key:focus {
    --lightness-offset: 10%
}


/* Heirachy between the keys. We want "incorrect location key" to overide "incorrect key"
and "correct location key" to overide "incorrect location key" */

.key.absent {
    --lightness: 23%;

}

.key.present {
    --hue: 49;
    --saturation: 51%;
    --lightness: 47%;
}

.key.correct {
    --hue: 115;
    --saturation: 29%;
    --lightness: 43%;
}

.alertContainer {
    position: fixed;
    top: 10vh;
    left: 50vw;
    transform: translate(-50%);
    z-index: 1;
    display: flex;
    flex-direction: column;
    align-items: center;
}

.alert {
    pointer-events: none;
    background-color: hsl(204, 7%, 85%);
    padding: .75em;
    border-radius: .25em;
    opacity: 1;
    transition: opactiy 500ms ease-in-out;
    margin-bottom: .5em;
}

.alert:last-child {
    margin-bottom: 0;
}

.alert.hide {
    opacity: 0;
}

.square.shake {
    animation: shake 250ms, ease-in-out;
}

.square[data-status="active"] {
    border-color: hsl(200, 1%, 34%);
}

.square[data-status="absent"] {
    border: hsl(240, 2%, 23%);
    background-color: hsl(240, 2%, 23%);
}

.square[data-status="present"] {
    border: hsl(49, 51%, 47%);
    background-color: hsl(49, 51%, 47%);
}

.square[data-status="correct"] {
    border: hsl(115, 29%, 43%);
    background-color: hsl(115, 29%, 43%);
}

.square.flip {
    transform: rotateX(90deg);
}


@keyframes shake {
    10% {
        transform: translateX(-5%);
    }

    30% {
        transform: translateX(5%);
    }

    50% {
        transform: translateX(-7.5%);
    }

    70% {
        transform: translateX(-5%);
    }

    90% {
        transform: translateX(5%);
    }

    100% {
        transform: translate(0);
    }

}